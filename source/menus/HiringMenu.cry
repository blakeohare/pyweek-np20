
class HiringMenu {
	field model;
	field elements = null;
	field parent;
	field tab = 'HR';
	field color = [40, 60, 100];
	field staff_member = null;
	field hired = false;
	
	constructor(wrapper_menu, model) {
		this.model = model;
		this.parent = wrapper_menu;
	}
	
	function get_ui_elements() {
		if (this.elements == null) {
			staff_id = this.model.staff.length;
			if (this.staff_member == null) {
				person = new Staff(staff_id);
				this.staff_member = person;
			} else {
				person = this.staff_member;
			}
			person.direction = 's';
			person.moving = true;
			images = [];
			images.add(person.get_current_image(0));
			images.add(person.get_current_image(3));
			images.add(person.get_current_image(6));
			images.add(person.get_current_image(9));
			
			elements = [];
			elements.add(create_ui_text('Hire new employee', 'white', 20, 20));
			elements.add(create_ui_image_list(images, 100, 60));
			
			y = 150;
			col0 = 20;
			col1 = 300;
			elements.add(create_ui_text('Asking Salary:', 'white', col0, y));
			elements.add(create_ui_text('$100 / game', 'green', col1, y));
			
			y += 30;
			elements.add(create_ui_text('Current Payroll:', 'white', col0, y));
			elements.add(create_ui_text('-$' + str(staff_id * 100), 'red', col1, y));
			
			y += 50;
			elements.add(create_ui_button('Hire', this.hire, 100, y, 100, 24, this.can_hire));
			
			this.elements = elements;
		}
		return this.elements;
	}
	
	function can_hire() {
		return !this.hired;
	}
	
	function hire() {
		new_hire = new Staff(this.staff_member.id);
		new_hire.x = 32 * 5;
		new_hire.y = 32 * 5;
		this.model.staff.add(new_hire);
		this.hired = true;
		this.elements = null;
		this.parent.elements = null;
	}
}
